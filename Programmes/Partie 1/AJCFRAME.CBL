000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. AJCFRAME.
000300
000400 ENVIRONMENT DIVISION.
000500 CONFIGURATION SECTION.
000600 SPECIAL-NAMES.
000700      DECIMAL-POINT IS COMMA.
000800
000900 INPUT-OUTPUT SECTION.
001000 FILE-CONTROL.
001100     SELECT VENTESAS ASSIGN TO VENTESA
001200     ORGANIZATION IS SEQUENTIAL
001300     FILE STATUS IS FS-VENTESA.
001400
001500     SELECT VENTESEU ASSIGN TO VENTESE
001600     ORGANIZATION IS SEQUENTIAL
001700     FILE STATUS IS FS-VENTESE.
001800
001900 DATA DIVISION.
002000 FILE SECTION.
002100 FD VENTESAS.
002200 01 ENR-VENTESAS.
002300    05 NO-COM-AS    PIC   S9(3).
002500    05 DATE-COM-AS.
002600       06 JOUR-AS   PIC XX.
002610       06 FILLER    PIC X.
002620       06 MOIS-AS   PIC XX.
002621       06 FILLER    PIC X.
002630       06 ANNEE-AS  PIC X(4).
002650    05 NO-EMP-AS    PIC    99.
002660    05 NO-CLI-AS    PIC    9(4).
002670    05 NO-PROD-AS   PIC    X(3).
002680    05 PRICE-AS     PIC   S9(3)V99.
002690    05 QUANT-COM-AS PIC   S9(2).
002691    05 FILLER       PIC    X(6).
002700
002710 FD VENTESEU.
002720 01 ENR-VENTESEU.
002730    05 NO-COM-EU    PIC    9(3).
002740    05 DATE-COM-EU.
002750       06 JOUR-EU   PIC XX.
002760       06 FILLER    PIC X.
002770       06 MOIS-EU   PIC XX.
002780       06 FILLER    PIC X.
002790       06 ANNEE-EU  PIC X(4).
002792    05 NO-EMP-EU    PIC    99.
002793    05 NO-CLI-EU    PIC    9(4).
002794    05 NO-PROD-EU   PIC    X(3).
002795    05 PRICE-EU     PIC    9(3)V99.
002796    05 QUANT-COM-EU PIC    9(2).
002797    05 FILLER       PIC    X(6).
002798
002799 WORKING-STORAGE SECTION.
002800
002801     EXEC SQL
002802     INCLUDE SQLCA
002803     END-EXEC
002804
002805     EXEC SQL
002806     INCLUDE CUSTOMER
002807     END-EXEC
002808
002809     EXEC SQL
002810     INCLUDE ORDERS
002811     END-EXEC
002812
002813     EXEC SQL
002814     INCLUDE ITEMS
002815     END-EXEC
002820
002821 77 WS-NO-CLI    PIC Z(3)9.
002822 77 FS-VENTESA   PIC 99.
002823 77 WS-ANO       PIC 99.
002824 77 FF-VENTESA   PIC 9 VALUE ZERO.
002825
002826 77 FS-VENTESE   PIC 99.
002827 77 FF-VENTESE   PIC 9 VALUE ZERO.
002828
002830 77 WS-VALNOCLI  PIC 9(4)  VALUE ZERO.
002831 77 WS-P-LIGNE   PIC 9(8)V99  VALUE ZERO.
002832 77 WS-CUMULBALANCE   PIC 9(8)V99  VALUE ZERO.
002833 77 ED-CUMULBALANCE   PIC Z(7)9,99 VALUE ZERO.
002840 77 WS-SOMMEBALANCE   PIC S9(8)V99 USAGE COMP-3.
002850
002860 77 WS-LIGNE-VIDE     PIC X VALUE ' '.
002861
002862 01 DATE-BON-FORMAT.
002863    06 ANNEE-OK  PIC X(4).
002864    06 FILLER    PIC X VALUE '-'.
002865    06 MOIS-OK   PIC XX.
002866    06 FILLER    PIC X VALUE '-'.
002867    06 JOUR-OK   PIC XX.
002868
002869 PROCEDURE DIVISION.
002870
002880     PERFORM AFFICHAGE-INTRO
002904
002905     PERFORM OUV-VENTESAS
002906
002907     PERFORM LECT-VENTESAS
002908
002909     PERFORM UNTIL FF-VENTESA = 1
002911       MOVE NO-CLI-AS  TO WS-VALNOCLI
002912
002913       MOVE ZERO TO WS-P-LIGNE
002914       MOVE ZERO TO WS-CUMULBALANCE
002915
002916      PERFORM UNTIL WS-VALNOCLI NOT EQUAL NO-CLI-AS OR
002917                                      FF-VENTESA = 1
002918       PERFORM AFFICHAGE-NEW-LINE
002922       PERFORM MOVE-AS
002923       PERFORM MOVE-ITEMS-AS
002924       PERFORM TRAITEMENT-ORDERS
002925
002926       COMPUTE WS-P-LIGNE = PRICE-AS * QUANT-COM-AS
002927       COMPUTE WS-CUMULBALANCE = WS-CUMULBALANCE + WS-P-LIGNE
002928       MOVE WS-P-LIGNE TO ED-CUMULBALANCE
002929       DISPLAY 'NUMERO CLIENT : ', NO-CLI-AS,
002930       ', PRIX LIGNE : ', ED-CUMULBALANCE
002931
002932       PERFORM LECT-VENTESAS
002933
002934       IF WS-VALNOCLI NOT EQUAL NO-CLI-AS OR FF-VENTESA = 1
002935* ICI ON MET A JOUR LA BALANCE DE LA TABLE CUSTOMERS
002940         PERFORM TRAITEMENT-BALANCE
003045       END-IF
003046
003047      END-PERFORM
003068
003069     END-PERFORM
003070     PERFORM FERM-VENTESAS
003080
003084*  ON PASSE AU FICHIER EUROPE A PARTIR D'ICI
003085     PERFORM AFFICHAGE-EUROPE
003092
003093     PERFORM OUV-VENTESEU
003094
003095     PERFORM LECT-VENTESEU
003096
003097     PERFORM UNTIL FF-VENTESE = 1
003098       MOVE NO-CLI-EU  TO WS-VALNOCLI
003099
003100       MOVE ZERO TO WS-P-LIGNE
003101       MOVE ZERO TO WS-CUMULBALANCE
003102
003103      PERFORM UNTIL WS-VALNOCLI NOT EQUAL NO-CLI-EU OR
003104                                      FF-VENTESE = 1
003105       PERFORM AFFICHAGE-NEW-LINE
003109       PERFORM MOVE-EU
003110       PERFORM MOVE-ITEMS-EU
003111       PERFORM TRAITEMENT-ORDERS
003112
003113       COMPUTE WS-P-LIGNE = PRICE-EU * QUANT-COM-EU
003114       COMPUTE WS-CUMULBALANCE = WS-CUMULBALANCE + WS-P-LIGNE
003115       MOVE WS-P-LIGNE TO ED-CUMULBALANCE
003116       DISPLAY 'NUMERO CLIENT : ', NO-CLI-EU
003117       ', PRIX LIGNE : ', ED-CUMULBALANCE
003118
003119       PERFORM LECT-VENTESEU
003120
003121       IF WS-VALNOCLI NOT EQUAL NO-CLI-EU OR FF-VENTESE = 1
003122* ICI ON MET A JOUR LA BALANCE DE LA TABLE CUSTOMERS
003123         PERFORM TRAITEMENT-BALANCE
003124       END-IF
003125
003126      END-PERFORM
003127
003128
003129
003130     END-PERFORM
003131     PERFORM FERM-VENTESEU
003132
003133     EXEC SQL ROLLBACK  END-EXEC
003134     PERFORM TEST-SQLCODE
003135
003136     GOBACK.
003137
003138 ABEND-PROG.
003139      DISPLAY "ANOMALIE GRAVE : "
003140      MOVE ZERO TO WS-ANO
003141      COMPUTE WS-ANO = 1 / WS-ANO.
003142
003143 LIGNE-VIDE.
003144      DISPLAY WS-LIGNE-VIDE.
003146
003147 AFFICHAGE-INTRO.
003148     DISPLAY "**CALCUL DU CUMULE BALANCE POUR CHAQUE CLIENT**"
003150     PERFORM LIGNE-VIDE 2 TIMES
003152     DISPLAY "******FICHIER ASIE******"
003153     PERFORM LIGNE-VIDE 2 TIMES.
003155
003156 AFFICHAGE-EUROPE.
003157     PERFORM LIGNE-VIDE 2 TIMES
003161     DISPLAY "******FICHIER EUROPE******"
003162     PERFORM LIGNE-VIDE 2 TIMES.
003163
003164 AFFICHAGE-NEW-LINE.
003165     PERFORM LIGNE-VIDE
003166     DISPLAY "ETUDE DE NOUVELLE LIGNE ***************"
003168     PERFORM LIGNE-VIDE.
003169
003174 OUV-VENTESAS.
003175      OPEN INPUT VENTESAS
003176      IF FS-VENTESA NOT = ZERO THEN
003177          DISPLAY "ERR OPEN - FS-VENTESA : ", FS-VENTESA
003178          PERFORM ABEND-PROG
003179      END-IF.
003180
003181 FERM-VENTESAS.
003182      CLOSE VENTESAS
003183      IF FS-VENTESA NOT = ZERO THEN
003184          DISPLAY "ERR CLOSE - FS-VENTESA : ", FS-VENTESA
003185          PERFORM ABEND-PROG
003186      END-IF.
003187
003188 LECT-VENTESAS.
003190      READ VENTESAS AT END
003191      DISPLAY "FIN DE FICHIER VENTESAS - FS : ", FS-VENTESA
003192      MOVE 1 TO FF-VENTESA
003193      END-READ.
003194
003195 OUV-VENTESEU.
003196      OPEN INPUT VENTESEU
003197      IF FS-VENTESE NOT = ZERO THEN
003198          DISPLAY "ERR OPEN - FS-VENTESE : ", FS-VENTESE
003199          PERFORM ABEND-PROG
003200      END-IF.
003201
003202 FERM-VENTESEU.
003203      CLOSE VENTESEU
003204      IF FS-VENTESE NOT = ZERO THEN
003205          DISPLAY "ERR CLOSE - FS-VENTESE : ", FS-VENTESE
003206          PERFORM ABEND-PROG
003207      END-IF.
003208
003209 LECT-VENTESEU.
003211      READ VENTESEU AT END
003212      DISPLAY "FIN DE FICHIER VENTESEU - FS : ", FS-VENTESE
003213      MOVE 1 TO FF-VENTESE
003214      END-READ.
003215
003216 TEST-SQLCODE.
003217
003218     EVALUATE TRUE
003219         WHEN SQLCODE = ZERO
003220                 CONTINUE
003221         WHEN SQLCODE > 0
003222             IF SQLCODE = +100
003223                 DISPLAY "JEU DE DONNEES VIDE OU FINI"
003224             ELSE
003225                 DISPLAY "WARNING : ", SQLCODE
003226             END-IF
003227         WHEN SQLCODE < ZERO
003228             PERFORM ABEND-PROG
003229     END-EVALUATE.
003230
003231 MOVE-AS.
003232     MOVE NO-COM-AS TO ORD-O-NO
003233     MOVE NO-EMP-AS TO ORD-S-NO
003234     MOVE NO-CLI-AS TO ORD-C-NO
003235     MOVE ANNEE-AS TO ANNEE-OK
003236     MOVE MOIS-AS TO MOIS-OK
003237     MOVE JOUR-AS TO JOUR-OK
003238     MOVE DATE-BON-FORMAT TO ORD-O-DATE.
003239
003240 MOVE-EU.
003241     MOVE NO-COM-EU TO ORD-O-NO
003242     MOVE NO-EMP-EU TO ORD-S-NO
003243     MOVE NO-CLI-EU TO ORD-C-NO
003244     MOVE ANNEE-EU TO ANNEE-OK
003245     MOVE MOIS-EU TO MOIS-OK
003246     MOVE JOUR-EU TO JOUR-OK
003247     MOVE DATE-BON-FORMAT TO ORD-O-DATE.
003248
003249 MOVE-ITEMS-AS.
003250     MOVE QUANT-COM-AS TO ITEM-QUANTITY
003251     MOVE NO-COM-AS TO ITEM-O-NO
003252     MOVE NO-PROD-AS TO ITEM-P-NO
003253     MOVE PRICE-AS TO ITEM-PRICE.
003254
003255 MOVE-ITEMS-EU.
003256     MOVE QUANT-COM-EU TO ITEM-QUANTITY
003257     MOVE NO-COM-EU TO ITEM-O-NO
003258     MOVE NO-PROD-EU TO ITEM-P-NO
003259     MOVE PRICE-EU TO ITEM-PRICE.
003260
003261
003262
003263 TRAITEMENT-ORDERS.
003264* CHANGER LE FORMAT DE LA DATE ICI
003265* UTILISER UN SOUS-PROG
003266     DISPLAY "*********PARTIE ORDER**********"
003267     DISPLAY " "
003268     EXEC SQL
003269         SELECT O_NO
003270         INTO :ORD-O-NO
003271         FROM ORDERS
003272         WHERE O_NO = :ORD-O-NO
003273     END-EXEC
003274     EVALUATE TRUE
003275         WHEN SQLCODE = ZERO
003276            DISPLAY "COMMANDE DEJA EXISTANTE"
003277            DISPLAY "NUM COMMANDE: ", ORD-O-NO
003278
003279            EXEC SQL
003280             UPDATE ORDERS
003281             SET S_NO = :ORD-S-NO, C_NO = :ORD-C-NO,
003282             O_DATE = :ORD-O-DATE
003283             WHERE O_NO = :ORD-O-NO
003284            END-EXEC
003285            EVALUATE TRUE
003286                 WHEN SQLCODE = ZERO
003287                  DISPLAY "MODIF OK"
003288
003289                  EXEC SQL
003290                    SELECT O_DATE, C_NO, S_NO, O_NO
003291                    INTO :ORD-O-DATE, :ORD-C-NO, :ORD-S-NO,
003292                    :ORD-O-NO
003293                    FROM ORDERS
003294                    WHERE O_DATE = :ORD-O-DATE
003295                  END-EXEC
003296                  PERFORM TEST-SQLCODE
003297                  DISPLAY "ORD DATE AVANT : ", ORD-O-DATE
003298                  DISPLAY "ORD EMPLOYE AVANT : ", ORD-S-NO
003299                  DISPLAY "ORD CLIENT AVANT : ", ORD-C-NO
003300                  DISPLAY "ORD COMMANDE AVANT : ", ORD-O-NO
003301
003302                  PERFORM TRAITEMENT-ITEMS
003303
003304                 WHEN SQLCODE > ZERO
003305                     IF SQLCODE = +100 THEN
003306                        DISPLAY "INEXISTANTE"
003307                     ELSE
003308                        DISPLAY "SUPP : WARNING ", SQLCODE
003309                        EXEC SQL ROLLBACK  END-EXEC
003310                        PERFORM TEST-SQLCODE
003311                     END-IF
003312                 WHEN OTHER
003313                     PERFORM ABEND-PROG
003314            END-EVALUATE
003315
003316         WHEN SQLCODE > ZERO
003317             IF SQLCODE = +100 THEN
003318                DISPLAY "COMMANDE INEXISTANTE, CREATION ORDER!"
003319
003320                EXEC SQL
003321                 INSERT INTO ORDERS
003322                 (
003323                  O_NO,
003324                  S_NO,
003325                  C_NO,
003326                  O_DATE
003327                 )
003328                 VALUES
003329                 (
003330                  :ORD-O-NO,
003331                  :ORD-S-NO,
003332                  :ORD-C-NO,
003333                  :ORD-O-DATE
003334                 )
003335                END-EXEC
003336                PERFORM TEST-SQLCODE
003337
003338                EXEC SQL
003339                  SELECT O_NO, S_NO, C_NO, O_DATE
003340                  INTO :ORD-O-NO, :ORD-S-NO, :ORD-C-NO,
003341                  :ORD-O-DATE
003342                  FROM ORDERS
003343                  WHERE O_NO = :ORD-O-NO
003344                END-EXEC
003345                PERFORM TEST-SQLCODE
003346                DISPLAY "ORD DATE CREE : ", ORD-O-DATE
003347                DISPLAY "ORD EMPLOYE CREE : ", ORD-S-NO
003348                DISPLAY "ORD CLIENT CREE : ", ORD-C-NO
003349                DISPLAY "ORD COMMANDE CREE : ", ORD-O-NO
003350
003351                PERFORM TRAITEMENT-ITEMS
003352
003353             ELSE
003354                DISPLAY "WARNING : ", SQLCODE
003355             END-IF
003356
003357         WHEN OTHER
003358             PERFORM ABEND-PROG
003359     END-EVALUATE.
003360
003361
003362 TRAITEMENT-ITEMS.
003364     DISPLAY "*********PARTIE ITEM**********"
003365     DISPLAY " "
003366     DISPLAY "NUM COM ITEM:", ITEM-O-NO
003367     EXEC SQL
003368         SELECT DISTINCT O_NO
003369         INTO :ITEM-O-NO
003370         FROM ITEMS
003371         WHERE O_NO = :ITEM-O-NO
003372     END-EXEC
003373     EVALUATE TRUE
003374         WHEN SQLCODE = ZERO
003375            DISPLAY "COMMANDE DEJA EXISTANTE DANS ITEM"
003376            DISPLAY "ITEM NUM COMMANDE: ", ITEM-O-NO
003377            EXEC SQL
003378                SELECT P_NO
003379                INTO :ITEM-P-NO
003380                FROM ITEMS
003381                WHERE O_NO = :ITEM-O-NO AND P_NO = :ITEM-P-NO
003382            END-EXEC
003383            EVALUATE TRUE
003384                WHEN SQLCODE = ZERO
003385                   DISPLAY "PRODUIT DEJA EXISTANT DANS CMDE"
003386                   DISPLAY "ITEM NUM PRODUIT: ", ITEM-P-NO
003387
003388                   EXEC SQL
003389                    UPDATE ITEMS
003390                    SET QUANTITY = QUANTITY + :ITEM-QUANTITY
003391                    WHERE O_NO = :ITEM-O-NO AND P_NO = :ITEM-P-NO
003392                   END-EXEC
003393                   PERFORM TEST-SQLCODE
003394
003395                WHEN SQLCODE > ZERO
003396                    IF SQLCODE = +100 THEN
003397                       DISPLAY "PRODUIT INEXISTANT DANS CMDE"
003398
003399                       EXEC SQL
003400                        INSERT INTO ITEMS
003401                        (
003402                         O_NO,
003403                         P_NO,
003404                         QUANTITY,
003405                         PRICE
003406                        )
003407                        VALUES
003408                        (
003409                         :ITEM-O-NO,
003410                         :ITEM-P-NO,
003411                         :ITEM-QUANTITY,
003412                         :ITEM-PRICE
003413                        )
003414                       END-EXEC
003415                       PERFORM TEST-SQLCODE
003416
003417                       EXEC SQL
003418                         SELECT O_NO, P_NO, QUANTITY, PRICE
003419                         INTO :ITEM-O-NO, :ITEM-P-NO,
003420                         :ITEM-QUANTITY, :ITEM-PRICE
003421                         FROM ITEMS
003422                         WHERE O_NO = :ITEM-O-NO AND
003423                               P_NO = :ITEM-P-NO
003424                       END-EXEC
003425                       PERFORM TEST-SQLCODE
003426                       DISPLAY "NUM CMDE CREE : ", ITEM-O-NO
003427                       DISPLAY "PRODUIT CREE : ", ITEM-P-NO
003428                       DISPLAY "QUANTITE CREE : ", ITEM-QUANTITY
003429                       DISPLAY "PRIX CREE : ", ITEM-PRICE
003430
003431                    ELSE
003432                       DISPLAY "SUPP : WARNING ", SQLCODE
003433                       EXEC SQL ROLLBACK  END-EXEC
003434                       PERFORM TEST-SQLCODE
003435                    END-IF
003436                WHEN OTHER
003437                    PERFORM ABEND-PROG
003438           END-EVALUATE
003439
003440         WHEN SQLCODE > ZERO
003441             IF SQLCODE = +100 THEN
003442                DISPLAY "COMMANDE INEXISTANTE"
003443                EXEC SQL
003444                 INSERT INTO ITEMS
003445                 (
003446                  O_NO,
003447                  P_NO,
003448                  QUANTITY,
003449                  PRICE
003450                 )
003451                 VALUES
003452                 (
003453                  :ITEM-O-NO,
003454                  :ITEM-P-NO,
003455                  :ITEM-QUANTITY,
003456                  :ITEM-PRICE
003457                 )
003458                END-EXEC
003459                PERFORM TEST-SQLCODE
003460
003461                EXEC SQL
003462                  SELECT O_NO, P_NO, QUANTITY, PRICE
003463                  INTO :ITEM-O-NO, :ITEM-P-NO,
003464                  :ITEM-QUANTITY, :ITEM-PRICE
003465                  FROM ITEMS
003466                  WHERE O_NO = :ITEM-O-NO AND
003467                        P_NO = :ITEM-P-NO
003468                END-EXEC
003469                PERFORM TEST-SQLCODE
003470                DISPLAY "I-NUM CMDE CREE : ", ITEM-O-NO
003471                DISPLAY "I-PRODUIT CREE : ", ITEM-P-NO
003472                DISPLAY "I-QUANTITE CREE : ", ITEM-QUANTITY
003473                DISPLAY "I-PRIX CREE : ", ITEM-PRICE
003474
003476             ELSE
003477                DISPLAY "SUPP : WARNING ", SQLCODE
003478                EXEC SQL ROLLBACK  END-EXEC
003479                PERFORM TEST-SQLCODE
003480             END-IF
003481         WHEN OTHER
003482             DISPLAY "ERR : ", SQLCODE
003483             DISPLAY "SATE : ", SQLSTATE
003484             PERFORM ABEND-PROG
003485     END-EVALUATE.
003486
003487 TRAITEMENT-BALANCE.
003488
003489         DISPLAY "-----CALCUL DE LA VALEUR DU CA-----"
003490         DISPLAY " "
003491
003492         MOVE ZERO TO WS-SOMMEBALANCE
003493         MOVE WS-CUMULBALANCE TO ED-CUMULBALANCE
003494         MOVE WS-VALNOCLI TO CUST-C-NO
003495
003496         EXEC SQL
003497           SELECT BALANCE
003498           INTO :CUST-BALANCE
003499           FROM CUSTOMERS
003500           WHERE C_NO = :CUST-C-NO
003501         END-EXEC
003502
003503         EVALUATE TRUE
003504              WHEN SQLCODE = ZERO
003505* ON CALCULE LA SOMME DE LA LIGNE
003506               COMPUTE WS-SOMMEBALANCE = WS-CUMULBALANCE
003507                                     + CUST-BALANCE
003508               DISPLAY "NUMERO CLIENT : ", WS-VALNOCLI
003509               DISPLAY "BALANCE A JOUTER: ", ED-CUMULBALANCE
003510               MOVE CUST-BALANCE TO ED-CUMULBALANCE
003511               DISPLAY "BALANCE AVANT ADDITION: ", ED-CUMULBALANCE
003512
003513              WHEN SQLCODE > ZERO
003514                  IF SQLCODE = +100 THEN
003515                       DISPLAY "CLIENT  INEXISTANT !"
003516                  ELSE
003517                       DISPLAY "WARNING : ", SQLCODE
003518                  END-IF
003519              WHEN OTHER
003520                  PERFORM ABEND-PROG
003521         END-EVALUATE
003522
003523         EXEC SQL
003524           UPDATE CUSTOMERS
003525           SET BALANCE = :WS-SOMMEBALANCE
003526           WHERE C_NO = :CUST-C-NO
003527         END-EXEC
003528
003529         EVALUATE TRUE
003530              WHEN SQLCODE = ZERO
003531* LA LIGNE EST BIEN UPDATEE, ON AFFICHE LA NOUVELLE BALANCE
003532               EXEC SQL
003533               SELECT BALANCE
003534                 INTO :CUST-BALANCE
003535                 FROM CUSTOMERS
003536                 WHERE C_NO = :CUST-C-NO
003537               END-EXEC
003538               PERFORM TEST-SQLCODE
003539               DISPLAY "**MISE A JOUR DE LA BALANCE EFFECTUE**"
003540               MOVE CUST-BALANCE TO ED-CUMULBALANCE
003541               DISPLAY "BALANCE APRES ADDITION: ", ED-CUMULBALANCE
003542
003543              WHEN SQLCODE > ZERO
003544                  IF SQLCODE = +100 THEN
003545                     DISPLAY "CLIENT INEXISTANT"
003546                  ELSE
003547                     DISPLAY "SUPP : WARNING ", SQLCODE
003548                     EXEC SQL ROLLBACK  END-EXEC
003549                     PERFORM TEST-SQLCODE
003550                  END-IF
003551              WHEN OTHER
003552                  PERFORM ABEND-PROG
003553         END-EVALUATE.
003554
003555
003556
003557
003558
003559
003560
003570*******************************************************
003593
003700
